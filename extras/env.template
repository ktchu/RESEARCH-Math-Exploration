# autoenv configuration file

# =========== User-Specified Configuration Parameters =========== #

# --- Virtual environment to activate

# Note: ".venv" should be changed to the location of the Python virtual
#       environment relative relative to root directory for the project
TARGET_VIRTUALENV=.venv

# --- Project-Specific Configuration Parameters

# Paths to add to PATH
# NOTE: paths should be specified relative to root directory for the project
PATH_EXTRA=

# Paths to add to PYTHONPATH
# NOTE: paths should be specified relative to root directory for the project
PYTHONPATH_EXTRA=

# ====================== DO NOT EDIT BELOW ====================== #

# --- Find top-level directory

# Note: "builtin cd" is required to avoid conflicts (e.g., when using autoenv)
TOP_DIR=`builtin cd $(dirname "${BASH_SOURCE[0]}") && pwd`

# --- Activate virtual Python environment

. $TARGET_VIRTUALENV/bin/activate

# --- Configure environment

# Set PATH
PATH_EXTRA="bin $PATH_EXTRA"
for DIR in $PATH_EXTRA; do
    if [[ "$PATH" != *$TOP_DIR/$DIR* ]]; then
        if [ -d $TOP_DIR/$DIR ]; then
            export PATH=$TOP_DIR/$DIR:$PATH
        fi
    fi
done

# Python configuration
export PYTHONPATH=$TOP_DIR
PYTHONPATH_EXTRA="lib $PYTHONPATH_EXTRA"
for DIR in $PYTHONPATH_EXTRA; do
    if [[ "$PYTHONPATH" != *$TOP_DIR/$DIR* ]]; then
        if [ -d $TOP_DIR/$DIR ]; then
            export PYTHONPATH=$TOP_DIR/$DIR:$PYTHONPATH
        fi
    fi
done

# Library directory
export LIB_DIR=$TOP_DIR/lib

# Data directory
export DATA_DIR=$TOP_DIR/data

# Jupyter configuration
export JUPYTER_CONFIG_DIR=$TOP_DIR/.jupyter

if [[ "$JUPYTER_PATH" != *$LIB_DIR* ]]; then
    export JUPYTER_PATH=$LIB_DIR:$JUPYTER_PATH
fi

# Jupyter aliases
alias jn='jupyter notebook'

# --- Clean up

unset TARGET_VIRTUALENV
unset TOP_DIR
